import { type NextPage } from "next";
import Head from "next/head";

import { AiOutlinePlusCircle } from "react-icons/ai";

import { api } from "~/utils/api";

import { create } from "zustand";
import QuoteCard from "~/components/QuoteCard";
import { useEffect } from "react";

export type Quote = {
  id?: string;
  updatedAt?: Date;
  createdAt?: Date;
  text: string;
  count: number;
};

type QuoteStore = {
  quotes: Quote[];
  addQuote: (quote: Quote) => void;
  updateQuote: (quote: Quote) => void;
  deleteQuote: (quote: Quote) => void;
};

export const useQuotesStore = create<QuoteStore>((set) => ({
  quotes: [],
  addQuote: (quote: Quote) =>
    set((state) => ({
      quotes: [...state.quotes, quote],
    })),
  updateQuote: (quote: Quote) =>
    set((state) => ({
      quotes: state.quotes.map((q) => {
        if (q.id === quote.id) {
          return quote;
        }
        return q;
      }),
    })),
  deleteQuote: (quote: Quote) =>
    set((state) => ({
      quotes: state.quotes.filter((q) => q.id !== quote.id),
    })),
}));

const Home: NextPage = () => {
  const { quotes, addQuote } = useQuotesStore();

  const createQuoteMutation = api.quote.create.useMutation();

  const { data, isLoading } = api.quote.getAll.useQuery();

  useEffect(() => {
    if (data) {
      useQuotesStore.setState({ quotes: data });
    }
  }, [data]);

  const createNewQuote = () => {
    createQuoteMutation
      .mutateAsync({ text: "Change Quote." })
      .then((quote) => {
        addQuote(quote);
      })
      .catch((err) => {
        console.log(err);
      });
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-400 to-blue-500">
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className="text-center p-16">
        <h1 className="text-4xl text-white">Statist√ºtz</h1>

        <p className="text-white">
          A simple app to create and share quotes with your friends.
        </p>
      </header>
      <main className="flex p-10">
        <div className="flex min-h-fit max-w-full flex-wrap justify-start align-top">
          {isLoading && <p>Loading...</p>}
          {!isLoading &&
            quotes.map((quote) => <QuoteCard quote={quote} key={quote.id} />)}
          <button
            onClick={createNewQuote}
            className="createNewCardButton m-4 flex h-72 w-72 flex-col items-center justify-center rounded-lg border-2 border-white bg-slate-200 bg-opacity-50"
          >
            <AiOutlinePlusCircle className="h-20 w-20  text-slate-100" />
            <p className="text-white">Create a new Quote</p>
          </button>
        </div>
      </main>
    </div>
  );
};

export default Home;
